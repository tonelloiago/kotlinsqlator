name: Build and Publish Ktl-SQL-Runner Library

on:
  merge:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/Checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with: 
          distribution: 'microsoft'
          java-version: '21'

      - name: Determine version
        id: versioning
        run: |
          git fetch --tags

          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "Last tag: $LAST_TAG"

          MAJOR=$(echo "$LAST_TAG" | sed 's/^v//' | cut -d. -f1)
          MINOR=$(echo "$LAST_TAG" | sed 's/^v//' | cut -d. -f2)
          PATCH=$(echo "$LAST_TAG" | sed 's/^v//' | cut -d. -f3)

          NEXT_MINOR=$((MINOR + 1))
          NEXT_VERSION="$MAJOR.$NEXT_MINOR.$PATCH"

          if [[ "${GITHUB_REF}" == "refs/heads/develop" ]]; then
            FINAL_VERSION="$NEXT_VERSION-SNAPSHOT"
          else
            FINAL_VERSION="$NEXT_VERSION"
          fi

          echo "overrideVersion=$FINAL_VERSION" >> $GITHUB_OUTPUT
          echo "finalVersion=$FINAL_VERSION"

      - name: Build with Gradle
        run: ./gradlew build -PoverrideVersion=${{ steps.versioning.outputs.overrideVersion }}

      # Optional: publish to Maven repository
      - name: Publish (main only)
        run: ./gradlew publish -PoverrideVersion=${{ steps.versioning.outputs.overrideVersion }}

      # Auto-tag release version (main only)
      - name: Create Git Tag
        if: github.ref == 'refs/heads/main'
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          TAG="v${{ steps.versioning.outputs.overrideVersion }}"
          git tag "$TAG"
          git push origin "$TAG"
